<div class="container my-5">
  <h1 class="text-center mb-4">Giỏ hàng của bạn</h1>

  {{#if items}}
    {{#if items.length}}
      <table class="table table-striped">
        <thead>
          <tr>
            <th>Sản phẩm</th>
            <th>Số lượng</th>
            <th>Giá</th>
            <th>Tổng cộng</th>
            <th>Hành động</th>
          </tr>
        </thead>
        <tbody>
          {{#each items}}
          <tr data-id="{{id}}">
            <td>{{product_name}}</td>
            <td>{{quantity}}</td>
            <td>{{formatCurrency price}}</td>
            <td class="item-total">{{formatCurrency sum_price}}</td>
            <td>
              <button class="btn btn-danger btn-sm remove-item-btn" data-id="{{id}}">Xóa</button>
            </td>
          </tr>
          {{/each}}
        </tbody>
      </table>
      <div class="text-end">
        <h3>Tổng cộng: <span id="total-price">{{formatCurrency total}}</span></h3>
      </div>
    {{else}}
      <p class="text-center text-muted">Giỏ hàng của bạn đang trống.</p>
    {{/if}}
  {{else}}
    <p class="text-center text-muted">Giỏ hàng của bạn đang trống.</p>
  {{/if}}

  <div class="text-center mt-4">
    <a href="/{{role}}" class="btn btn-primary">Tiếp tục mua sắm</a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const removeButtons = document.querySelectorAll('.remove-item-btn');

    removeButtons.forEach(button => {
      button.addEventListener('click', async (event) => {
        const id = event.target.getAttribute('data-id');

        if (!id) {
          alert('Không tìm thấy ID sản phẩm để xóa.');
          return;
        }

        try {
          const response = await fetch('/cart/remove', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id }),
          });

          const result = await response.json();

          if (response.ok) {
            // Xóa sản phẩm khỏi bảng
            event.target.closest('tr').remove();

            // Cập nhật lại tổng giá
            updateTotalPrice();

            // Cập nhật số lượng sản phẩm trong nút giỏ hàng
            updateCartCount();
          } else {
            alert(result.message);
          }
        } catch (error) {
          console.error('Lỗi khi xóa sản phẩm:', error);
        }
      });
    });

    function updateTotalPrice() {
      let total = 0;
      document.querySelectorAll('.item-total').forEach(cell => {
        total += parseFloat(cell.innerText.replace(/\D/g, '') || 0);
      });
      document.querySelector('#total-price').innerText = `${total.toLocaleString()} VND`;
    }

    async function updateCartCount() {
      try {
        const response = await fetch('/cart/items-count');
        const data = await response.json();
        document.getElementById('cart-count').innerText = data.totalItems || 0;
      } catch (error) {
        console.error('Lỗi khi tải số lượng giỏ hàng:', error);
      }
    }
  });
</script>
