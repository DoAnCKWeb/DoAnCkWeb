{{#if message}}
<div class="alert alert-danger" role="alert">
  {{message}}
</div>
{{/if}}

<div class="container my-5">
  <div class="row">
    <!-- Hiển thị danh mục (Bên trên) -->
    <div class="col-md-16 mb-4">
      <div class="d-flex flex-wrap border p-20 rounded shadow-lg bg-light mb-4">
        <ul class="nav me-4 justify-content-center w-100">
          <!-- Nút hiển thị tất cả -->
          <li class="nav-item mx-4 my-2">
            <button class="nav-link px-4 py-2 bg-danger text-white text-center rounded-pill border-0" 
              onclick="filterProducts('all', 1)">
              Tất cả
            </button>
          </li>

          <!-- Danh mục -->
          {{#each categories}}
          <li class="nav-item mx-4 my-2">
            <button class="nav-link px-4 py-2 bg-danger text-white text-center rounded-pill border-0" 
              onclick="filterProducts('{{id}}', 1)">
              {{name}}
            </button>
          </li>
          {{/each}}
        </ul>
      </div>
    </div>


    <!-- Bộ lọc sản phẩm (Bên trái) -->
    <div class="col-md-3 mb-4">
      <div class="p-3 border rounded shadow-lg">
        <h5 class="mb-3">Bộ lọc</h5>

        <!-- Bộ lọc giá -->
        <h6>Giá</h6>
        <input type="number" id="min-price" class="form-control mb-2" placeholder="Giá tối thiểu">
        <input type="number" id="max-price" class="form-control mb-3" placeholder="Giá tối đa">

        <!-- Phần thông báo lỗi giá -->
        <div id="price-error" class="text-danger" style="display: none;">Giá tối đa phải lớn hơn hoặc bằng giá tối
          thiểu.</div>

        <!-- Bộ lọc dung lượng -->
        <h6>Dung lượng</h6>
        <select id="storage" class="form-select mb-3">
          <option value="">Tất cả</option>
          <option value="64GB">64GB</option>
          <option value="128GB">128GB</option>
          <option value="256GB">256GB</option>
          <option value="512GB">512GB</option>
          <option value="1TB">1TB</option>
        </select>

        <!-- Bộ lọc năm sản xuất -->
        <h6>Năm sản xuất</h6>
        <select id="release-year" class="form-select mb-3">
          <option value="">Tất cả</option>
          <option value="2024">2024</option>
          <option value="2023">2023</option>
          <option value="2022">2022</option>
          <option value="2021">2021</option>
          <option value="2020">2020</option>
        </select>

        <!-- Bộ lọc hệ điều hành -->
        <h6>Hệ điều hành</h6>
        <select id="os" class="form-select mb-3">
          <option value="">Tất cả</option>
          <option value="Android">Android</option>
          <option value="iOS">iOS</option>
        </select>

        <!-- Bộ lọc theo giá -->
        <h6>Sắp xếp theo giá</h6>
        <select id="price-sort" class="form-select mb-3">
          <option value="">Tất cả</option>
          <option value="asc">Giá từ thấp đến cao</option>
          <option value="desc">Giá từ cao đến thấp</option>
        </select>

        <button class="btn btn-primary w-100 mt-3" onclick="filterProducts(currentCategory, 1)">Lọc</button>
      </div>
    </div>

    <!-- Hiển thị sản phẩm (Bên phải) -->
    <div class="col-md-9">
      <div class="row" id="product-container">
        {{#each products}}
        <div class="col-md-4 mb-4">
          <div class="card h-100 text-center">
            <img src="{{image}}" class="card-img-top" alt="{{product_name}}"
              style="height: 250px; width: 250px; text-align: center; margin: 0 auto; display: block;">
            <div class="card-body">
              <h5 class="card-title">{{product_name}}</h5>
              <p class="card-text">Giá: {{formatCurrency price}}</p>
              <a href="/product/{{product_id}}" class="btn btn-success w-100 mb-2">Xem chi tiết</a>
              <button onclick="addToCart('{{product_id}}', 1)" class="btn btn-primary w-100">Thêm vào giỏ hàng</button>
            </div>
          </div>
        </div>
        {{/each}}
      </div>

      <!-- Phân trang -->
      <div class="d-flex justify-content-center mt-4">
        <nav aria-label="Page navigation">
          <ul class="pagination" id="pagination-container">
            <!-- Phần trước -->
            {{#if (gt currentPage 1)}}
            <li class="page-item">
              <button class="page-link border-0" onclick="changePage({{subtract currentPage 1}})">&laquo;</button>
            </li>
            {{/if}}

            <!-- Hiển thị các trang -->
            {{#each (range 1 totalPages)}}
            <li class="page-item {{#if (eq this ../currentPage)}}active{{/if}}">
              <button class="page-link border-0" onclick="changePage({{this}})">{{this}}</button>
            </li>
            {{/each}}

            <!-- Phần sau -->
            {{#if (lt currentPage totalPages)}}
            <li class="page-item">
              <button class="page-link border-0" onclick="changePage({{add currentPage 1}})">&raquo;</button>
            </li>
            {{/if}}
          </ul>
        </nav>
      </div>
    </div>
  </div>
</div>

<style>
  .selected-category {
    background-color: red !important;
    color: white !important;
  }
</style>

<script>
  let currentCategory = 'all'; // Mặc định danh mục hiện tại là "Tất cả"

  // Lọc sản phẩm theo danh mục và trang
  function filterProducts(categoryId, page) {
    currentCategory = categoryId; // Cập nhật danh mục hiện tại

    // Lấy các giá trị từ bộ lọc
    const minPrice = document.getElementById('min-price').value || '';
    const maxPrice = document.getElementById('max-price').value || '';
    const storage = document.getElementById('storage').value || '';
    const priceSort = document.getElementById('price-sort').value || ''; // Lọc theo giá
    const releaseYear = document.getElementById('release-year').value || ''; // Lọc theo năm sản xuất
    const os = document.getElementById('os').value || '';

    // Kiểm tra nếu cả minPrice và maxPrice đều được nhập, kiểm tra minPrice và maxPrice hợp lệ
    if (minPrice && maxPrice && parseFloat(maxPrice) < parseFloat(minPrice)) {
      // Hiển thị thông báo lỗi
      document.getElementById('price-error').style.display = 'block';
      return; // Dừng lại không gửi request AJAX
    } else {
      // Nếu không có lỗi, ẩn thông báo lỗi
      document.getElementById('price-error').style.display = 'none';
    }

    // Xây dựng URL với các tham số bộ lọc
    let url = `/products?category=${categoryId}&page=${page}&minPrice=${minPrice}&maxPrice=${maxPrice}&storage=${storage}&priceSort=${priceSort}&releaseYear=${releaseYear}&os=${os}`;

    fetch(url)
      .then(response => response.json())
      .then(data => {
        const productContainer = document.querySelector('#product-container');
        const paginationContainer = document.querySelector('#pagination-container');

        // Xóa sản phẩm cũ
        productContainer.innerHTML = '';
        data.products.forEach(product => {
          productContainer.innerHTML += `
            <div class="col-md-4 mb-4">
              <div class="card h-100 text-center">
                <img src="${product.image}" class="card-img-top" alt="${product.product_name}" style="height: 250px; width: 250px; text-align: center; margin: 0 auto; display: block;">
                <div class="card-body">
                  <h5 class="card-title">${product.product_name}</h5>
                  <p class="card-text">Giá: ${formatCurrency(product.price)}</p>
                  <a href="/product/${product.product_id}" class="btn btn-success w-100 mb-2">Xem chi tiết</a>
                  <button onclick="addToCart('${product.product_id}', 1)" class="btn btn-primary w-100">Thêm vào giỏ hàng</button>
                </div>
              </div>
            </div>
          `;
        });

        // Cập nhật phân trang với dấu "..."
        paginationContainer.innerHTML = '';
        if (data.currentPage > 1) {
          paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0" onclick="filterProducts('${categoryId}', ${data.currentPage - 1})">&laquo;</button></li>`;
        }

        if (data.totalPages <= 5) {
          // Nếu tổng số trang <= 5, hiển thị tất cả các trang
          for (let i = 1; i <= data.totalPages; i++) {
            paginationContainer.innerHTML += `<li class="page-item ${i === data.currentPage ? 'active' : ''}"><button class="page-link border-0" onclick="filterProducts('${categoryId}', ${i})">${i}</button></li>`;
          }
        } else {
          // Nếu tổng số trang > 5, chỉ hiển thị các trang xung quanh trang hiện tại
          if (data.currentPage <= 3) {
            // Nếu trang hiện tại <= 3, hiển thị trang 1, 2, 3, ... và trang cuối
            for (let i = 1; i <= 3; i++) {
              paginationContainer.innerHTML += `<li class="page-item ${i === data.currentPage ? 'active' : ''}"><button class="page-link border-0" onclick="filterProducts('${categoryId}', ${i})">${i}</button></li>`;
            }
            paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0">...</button></li>`;
            paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0" onclick="filterProducts('${categoryId}', ${data.totalPages})">${data.totalPages}</button></li>`;
          } else if (data.currentPage >= data.totalPages - 2) {
            // Nếu trang hiện tại gần cuối, hiển thị các trang cuối cùng
            paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0" onclick="filterProducts('${categoryId}', 1)">1</button></li>`;
            paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0">...</button></li>`;
            for (let i = data.totalPages - 2; i <= data.totalPages; i++) {
              paginationContainer.innerHTML += `<li class="page-item ${i === data.currentPage ? 'active' : ''}"><button class="page-link border-0" onclick="filterProducts('${categoryId}', ${i})">${i}</button></li>`;
            }
          } else {
            // Nếu trang hiện tại ở giữa, hiển thị các trang xung quanh
            paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0" onclick="filterProducts('${categoryId}', 1)">1</button></li>`;
            paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0">...</button></li>`;
            for (let i = data.currentPage - 1; i <= data.currentPage + 1; i++) {
              paginationContainer.innerHTML += `<li class="page-item ${i === data.currentPage ? 'active' : ''}"><button class="page-link border-0" onclick="filterProducts('${categoryId}', ${i})">${i}</button></li>`;
            }
            paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0">...</button></li>`;
            paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0" onclick="filterProducts('${categoryId}', ${data.totalPages})">${data.totalPages}</button></li>`;
          }
        }

        if (data.currentPage < data.totalPages) {
          paginationContainer.innerHTML += `<li class="page-item"><button class="page-link border-0" onclick="filterProducts('${categoryId}', ${data.currentPage + 1})">&raquo;</button></li>`;
        }
      });
  }

  // Hàm format tiền tệ
  function formatCurrency(value) {
    return new Intl.NumberFormat('vi-VN').format(value) + ' VND';
  }

  // Khi chuyển trang
  function changePage(page) {
    filterProducts(currentCategory, page);
  }
</script>
