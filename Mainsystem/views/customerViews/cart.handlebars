{{#if successMessage}}
<div class="alert alert-success" role="alert">
  {{successMessage}}
</div>
{{/if}}

{{#if errorMessage}}
<div class="alert alert-danger" role="alert">
  {{errorMessage}}
</div>
{{/if}}

{{#if messages.error}}
  <div class="alert alert-danger" role="alert">
    {{messages.error}}
  </div>
{{/if}}

{{#if message}}
<div class="alert alert-danger" role="alert">
  {{message}}
</div>
{{/if}}

<div class="container my-5">
  <h1 class="text-center mb-4">Giỏ hàng của bạn</h1>

  <div class="row">
    <!-- Danh sách sản phẩm (bên trái) -->
    <div class="col-lg-8">
      {{#if items}}
        {{#if items.length}}
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Hình ảnh</th>
                <th>Sản phẩm</th>
                <th>Dung lượng</th>
                <th>Số lượng</th>
                <th>Giá</th>
                <th>Tổng</th>
                <th>Hành động</th>
              </tr>
            </thead>
            <tbody>
              {{#each items}}
              <tr data-id="{{id}}">
                <td><img src="{{this.image}}" alt="{{this.product_name}}" width="100"></td>
                <td>{{product_name}}</td>
                <td>{{this.storage_capacity}}</td>
                <td id="item-quantity">{{quantity}}</td>
                <td>{{formatCurrency price}}</td>
                <td class="item-total">{{formatCurrency sum_price}}</td>
                <td>
                  <button class="btn btn-danger btn-sm remove-item-btn" data-id="{{id}}">Xóa</button>
                </td>
                <td>
                   <input type="checkbox" id="circleRadio" class="form-check-input btn btn-primary rounded-circle p-3" ></td>
              </tr>
              {{/each}}
            </tbody>
          </table>
        {{else}}
          <p class="text-center text-muted">Giỏ hàng của bạn đang trống.</p>
        {{/if}}
      {{else}}
        <p class="text-center text-muted">Giỏ hàng của bạn đang trống.</p>
      {{/if}}
    </div>

    <div class="col-lg-4">
      <div class="card">
        <div class="card-body">
          <h4 class="card-title">Tổng cộng</h4>
          <h3 class="text-end" id="total-price"></h3>
          <hr>
          <div class="text-center mt-4">
            <a href="/{{role}}" class="btn btn-primary btn-block">Tiếp tục mua sắm</a>
            <button id="btn-payment" class="btn btn-danger">Thanh toán</button>
          </div>

          <!-- Biểu mẫu thông tin thanh toán (ẩn ban đầu) -->
          <div id="payment-form" class="mt-4" style="display: none; padding-top: 20px;">
            <h3 class="text-center mb-4">Thông tin thanh toán</h3>
            <form id="paymentForm">
              {{#if user}}
              <div class="mb-3">
                <label for="name" class="form-label">Họ và tên</label>
                <p class="form-control" id="name">{{user.name}}</p>
              </div>
              {{/if}}

              <div class="mb-3">
                <div class="d-flex align-items-center">
                  <p class="mb-0">Tổng tiền cần thanh toán : </p>
                  <p id="total" class="mb-0 ms-2">{{formatCurrency totalPrice}}</p>
                </div>
              </div>

              <button type="submit" class="btn btn-success w-100">Xác nhận thanh toán</button>
            </form>
          </div>

        </div>
      </div>
    </div>
  </div>
</div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
      const removeButtons = document.querySelectorAll('.remove-item-btn');
      const checkboxesContainer = document.querySelector('table tbody'); // Bao trùm checkbox
      const paymentButton = document.getElementById('btn-payment');
      const totalPriceElement = document.getElementById('total-price');
      const paymentForm = document.getElementById('paymentForm');
      const total_payment = document.getElementById('total');
      // Hàm cập nhật tổng giá
      function updateTotalPrice() {
        let total = 0;

        // Lặp qua tất cả các checkbox được chọn
        document.querySelectorAll('input[type="checkbox"]:checked').forEach((checkbox) => {
          const row = checkbox.closest('tr'); // Lấy hàng chứa checkbox
          const itemTotal = row.querySelector('.item-total'); // Lấy giá của sản phẩm
          if (itemTotal) {
            const price = parseFloat(itemTotal.innerText.replace(/\D/g, '') || 0); // Loại bỏ các ký tự không phải số
            total += price;
          }
        });

        // Cập nhật tổng giá
        totalPriceElement.innerText = `${total.toLocaleString()} VND`;
        total_payment.innerText= `${total.toLocaleString()} VND`;

        // Kích hoạt hoặc vô hiệu hóa nút "Thanh toán"
        paymentButton.classList.toggle('disabled', total <= 0);
      }

      // Gắn sự kiện thay đổi cho checkbox (dùng event delegation)
      checkboxesContainer.addEventListener('change', (event) => {
        if (event.target.type === 'checkbox') {
          updateTotalPrice();
        }
      });

      paymentButton.addEventListener('click', function () {
      if (!paymentButton.classList.contains('disabled')) {
        // Lấy danh sách sản phẩm được chọn với định dạng id:số lượng
        const selectedProducts = Array.from(document.querySelectorAll('input[type="checkbox"]:checked')).map((checkbox) => {
          const row = checkbox.closest('tr'); // Lấy hàng chứa checkbox
          const productId = row.getAttribute('data-id'); // Lấy id sản phẩm
          const quantityElement = row.querySelector('#item-quantity'); // Lấy phần tử chứa số lượng
          const quantity = quantityElement ? parseInt(quantityElement.innerText, 10) || 1 : 1; // Lấy số lượng, mặc định là 1
          return `${productId}:${quantity}`; // Định dạng id:số lượng
        });

        if (selectedProducts.length > 0) {
          console.log(selectedProducts);

          // Cập nhật action của form với danh sách id:số lượng
          paymentForm.setAttribute('action', `/payment/${selectedProducts.join(',')}`);
          paymentForm.setAttribute('method', 'POST'); // Đảm bảo phương thức là POST

          // Hiển thị form thanh toán
          document.getElementById('payment-form').style.display = 'block';
          {{!-- paymentButton.scrollIntoView({ behavior: 'smooth' }); --}}
        } else {
          alert('Vui lòng chọn ít nhất một sản phẩm để thanh toán.');
        }
      }
    });



      // Xử lý xóa sản phẩm
      removeButtons.forEach((button) => {
        button.addEventListener('click', async (event) => {
          const id = event.target.getAttribute('data-id');

          if (!id) {
            alert('Không tìm thấy ID sản phẩm để xóa.');
            return;
          }

          try {
            const response = await fetch('/cart/remove', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ id }), // Gửi `id` của sản phẩm
            });

            const result = await response.json();

            if (response.ok && result.success) {
              // Xóa sản phẩm khỏi bảng
              event.target.closest('tr').remove();

              // Cập nhật lại tổng giá
              updateTotalPrice();

              // Cập nhật số lượng sản phẩm trong nút giỏ hàng
              document.getElementById('cart-count').textContent = result.totalItems || 0;
            } else {
              alert(result.message || 'Lỗi không xác định.');
            }
          } catch (error) {
            console.error('Lỗi khi xóa sản phẩm:', error);
            alert('Có lỗi xảy ra khi kết nối máy chủ.');
          }
        });
      });

      // Cập nhật trạng thái ban đầu
      updateTotalPrice();
    });
</script>
